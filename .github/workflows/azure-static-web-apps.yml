name: Azure Static Web Apps CI/CD

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Build API ourselves so Oryx doesn't try to compile TS
      - name: Use Node 18 for API build
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      # ---- PRE-BUILD: validate that all function.json files are valid JSON ----
      - name: Validate function.json syntax (pre-build)
        shell: bash
        run: |
          set -e
          shopt -s globstar nullglob
          files=(api/**/function.json)
          if [ ${#files[@]} -eq 0 ]; then
            echo "::error::No function.json files found under api/"
            exit 1
          fi
          for f in "${files[@]}"; do
            echo "Checking JSON: $f"
            node -e "JSON.parse(require('fs').readFileSync(process.argv[1],'utf8'))" "$f" \
              || { echo "::error::Invalid JSON in $f"; exit 1; }
          done
          echo "All function.json files parse correctly."

      # ---- BUILD: compile TS to JS and prune dev deps so scriptFile targets exist ----
      - name: Build API (compile TS in-place; then prune dev deps)
        working-directory: api
        shell: bash
        run: |
          set -e
          if [ -f package-lock.json ]; then
            npm ci --no-audit --no-fund
          else
            npm install --no-audit --no-fund
          fi
          npx tsc -p tsconfig.json
          npm prune --omit=dev

      # ---- POST-BUILD: validate scriptFile points to a real JS file ----
      - name: Validate function.json scriptFile targets (post-build)
        shell: bash
        run: |
          set -e
          shopt -s globstar nullglob
          for f in api/**/function.json; do
            # read scriptFile field
            script=$(node -e "const fs=require('fs'); const j=JSON.parse(fs.readFileSync(process.argv[1],'utf8')); process.stdout.write(j.scriptFile||'');" "$f")
            if [ -z "$script" ]; then
              echo "::error::Missing \"scriptFile\" in $f"
              exit 1
            fi
            dir="$(dirname "$f")"
            if [ ! -f "$dir/$script" ]; then
              echo "::error::scriptFile path not found: $dir/$script (from $f)"
              echo "Directory listing for $dir:"
              ls -la "$dir"
              exit 1
            fi
            # quick structural check for bindings
            node -e "const fs=require('fs');const j=JSON.parse(fs.readFileSync(process.argv[1],'utf8')); if(!Array.isArray(j.bindings)||!j.bindings.length){process.exit(2)}" "$f" \
              || { echo "::error::Missing/empty \"bindings\" array in $f"; exit 1; }
            echo "OK  $f -> $script"
          done

      # ---- DEPLOY: skip Oryx builds; we already compiled TS ----
      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          action: upload
          app_location: web
          skip_app_build: true
          api_location: api
          skip_api_build: true
