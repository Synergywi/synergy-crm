- name: Deploy to Azure Static Web Apps
  if: github.ref == 'refs/heads/main'
  uses: Azure/static-web-apps-deploy@v1
  with:
    azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
    action: upload                      # REQUIRED for manual upload
    app_location: "/"                   # path to your static frontend (root)
    api_location: "api"                 # your API folder, "" if none
    app_artifact_location: "dist"       # change if your build output isn’t /dist
    skip_app_build: true                # skip rebuild here
    skip_api_build: true                # skip API build here


      # ---------- Detect app lockfile ----------
      - id: app_lock
        name: Check app lockfile
        shell: bash
        run: |
          if [ -f package-lock.json ]; then
            echo "present=true" >> $GITHUB_OUTPUT
          else
            echo "present=false" >> $GITHUB_OUTPUT
          fi

      # ---------- Setup Node for app (with cache only if lockfile exists) ----------
      - name: Setup Node for app (cached)
        if: steps.app_lock.outputs.present == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Setup Node for app (no cache)
        if: steps.app_lock.outputs.present != 'true'
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # ---------- Install & build app ----------
      - name: Install app deps (ci)
        if: steps.app_lock.outputs.present == 'true'
        run: npm ci

      - name: Install app deps (install)
        if: steps.app_lock.outputs.present != 'true'
        run: npm install

      - name: Build app
        run: npm run build
        # If your build output is not "dist", change app_artifact_location below to match

      # ---------- Detect api lockfile ----------
      - id: api_lock
        name: Check API lockfile
        shell: bash
        run: |
          if [ -f api/package-lock.json ]; then
            echo "present=true" >> $GITHUB_OUTPUT
          else
            echo "present=false" >> $GITHUB_OUTPUT
          fi

      # ---------- Setup Node for api (with cache only if lockfile exists) ----------
      - name: Setup Node for api (cached)
        if: steps.api_lock.outputs.present == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: api/package-lock.json

      - name: Setup Node for api (no cache)
        if: steps.api_lock.outputs.present != 'true'
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # ---------- Install API deps ----------
      - name: Install API deps (ci, prod)
        if: steps.api_lock.outputs.present == 'true'
        working-directory: api
        run: npm ci --omit=dev

      - name: Install API deps (install, prod)
        if: steps.api_lock.outputs.present != 'true'
        working-directory: api
        run: npm install --omit=dev

      # ---------- Deploy (skip Oryx builds) ----------
      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}

          # Paths in your repo
          app_location: "/"
          api_location: "api"
          app_artifact_location: "dist"   # <- change if your Vite build outputs elsewhere

          # We already built/installed — don't let Oryx run npm
          skip_app_build: true
          skip_api_build: true
