name: Azure Static Web Apps CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [ main ]

jobs:
  build_and_deploy:
    if: github.event_name != 'pull_request' || github.event.action != 'closed'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # --- Node setup (cache only if lockfile exists) ---
      - name: Setup Node 18 + npm cache
        if: ${{ hashFiles('api/package-lock.json') != '' }}
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: npm
          cache-dependency-path: api/package-lock.json

      - name: Setup Node 18 (no cache)
        if: ${{ hashFiles('api/package-lock.json') == '' }}
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      # --- Validate function.json before build ---
      - name: Validate function.json syntax (pre-build)
        shell: bash
        run: |
          set -e
          shopt -s nullglob
          for f in api/**/function.json; do
            node -e "JSON.parse(require('fs').readFileSync(process.argv[1],'utf8'))" "$f"
          done

      # --- Build API (ts -> js) and keep only prod deps ---
      - name: Build API (ts -> js) and keep only prod deps
        working-directory: api
        shell: bash
        run: |
          set -e
          if [ -f package-lock.json ]; then npm ci --no-audit --no-fund; else npm i --no-audit --no-fund; fi
          npx tsc -p tsconfig.json
          npm prune --omit=dev

      # --- Verify scriptFile targets after build ---
      - name: Validate function.json scriptFile targets (post-build)
        shell: bash
        run: |
          set -e
          for d in api/*; do
            [ -d "$d" ] || continue
            f="$d/function.json"
            [ -f "$f" ] || continue
            target=$(node -p "try{require('$f').scriptFile || 'index.js'}catch(e){'index.js'}")
            if [ ! -f "$d/$target" ]; then
              echo "scriptFile path not found: $d/$target (from $f)"; exit 1
            fi
          done

      # --- Deploy (no Oryx build; we already built) ---
      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          action: upload
          app_location: web
          skip_app_build: true
          api_location: api
          skip_api_build: true

      # --- Soft smoke tests: NEVER fail the job ---
      - name: Smoke test API (/api/ping)
        if: ${{ vars.SWA_URL != '' }}
        continue-on-error: true
        shell: bash
        env:
          SWA_URL: ${{ vars.SWA_URL }}
        run: |
          set -e
          echo "Hitting $SWA_URL/api/ping"
          curl -fsS "$SWA_URL/api/ping" | tee /tmp/api_ping.json
          node -e "try{const j=require('fs').readFileSync('/tmp/api_ping.json','utf8'); const o=JSON.parse(j); if(!o.ok) process.exit(2)}catch(e){process.exit(3)}"

      - name: Smoke test Web (/)
        if: ${{ vars.SWA_URL != '' }}
        continue-on-error: true
        shell: bash
        env:
          SWA_URL: ${{ vars.SWA_URL }}
        run: |
          set -e
          echo "Hitting $SWA_URL/"
          curl -fsS "$SWA_URL" >/dev/null

      - name: Post Use Node 18 for API build
        if: always()
        run: echo "Done."
