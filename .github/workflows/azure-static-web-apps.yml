name: Azure Static Web Apps CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [ main ]

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # --- Build Azure Functions API (TypeScript -> JS in-place) ---
      - name: Use Node 18 for API build
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      # Validate function.json syntax before we do anything else
      - name: Validate function.json syntax (pre-build)
        shell: bash
        run: |
          set -e
          shopt -s nullglob
          for f in api/*/function.json; do
            echo "Checking JSON: $f"
            node -e "JSON.parse(require('fs').readFileSync('$f','utf8'))"
          done

      - name: Build API (compile TS in-place; then prune dev deps)
        working-directory: api
        shell: bash
        run: |
          set -e
          # Install deps (respect lockfile if present)
          if [ -f package-lock.json ]; then
            npm ci --no-audit --no-fund
          else
            npm install --no-audit --no-fund
          fi

          # Compile TS -> JS in place (tsconfig.json controls emit)
          npx tsc -p tsconfig.json

          # IMPORTANT: remove .ts sources and tsconfig so Oryx doesn't run tsc again
          find . -type f -name "*.ts" -not -path "./node_modules/*" -delete || true
          rm -f tsconfig.json || true

          # Production-only deps for deployment
          npm prune --omit=dev

      # Double-check each function.json points at a real scriptFile after build
      - name: Validate function.json scriptFile targets (post-build)
        shell: bash
        run: |
          set -e
          shopt -s nullglob
          for f in api/*/function.json; do
            dir="$(dirname "$f")"
            target="$(node -e "const j=require('$f');process.stdout.write(j.scriptFile||'')")"
            if [ -z "$target" ]; then
              echo "ERROR: scriptFile not set in $f"; exit 1
            fi
            if [ ! -f "$dir/$target" ]; then
              echo "ERROR: scriptFile path not found: $dir/$target (from $f)"; exit 1
            fi
            echo "OK  $f -> $target"
          done

      # --- Deploy (let the action/Oryx detect Node for the API) ---
      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          action: upload

          # Your static site
          app_location: web
          skip_app_build: true
          app_build_command: 'echo "skip app build"'

          # Functions API (we DO NOT skip api build here)
          api_location: api
          skip_api_build: false
          api_build_command: ''

        env:
          # (Optional) quiet npm noise inside Oryx
          NPM_CONFIG_AUDIT: 'false'
          NPM_CONFIG_FUND: 'false'
